# normal backup command only capsulates repository and metadata files,
# this script takes backups of config files
# ! for ssh keys, take extra step to copy them into new machine/container

Mdate=$(date +%Y_%m_%d)
LogFile="/home/dailygitbackup/backup_log_config_${Mdate}.txt"

# remove old backup file
echo "Files created by config backup script will be deleted by daily backup script!:" >> ${LogFile}
echo -e "\n\n\n\n\n" >> ${LogFile}

# config backup
wall 'starting GitLab config backup'
echo "Backup has been started at $(date +'%d.%m.%Y %H:%M:%S')" >> ${LogFile}
docker exec -t CvZgitlab /bin/sh -c 'gitlab-ctl backup-etc' >> ${LogFile}
echo "Backup has been completed at $(date +'%d.%m.%Y %H:%M:%S')" >> ${LogFile}

# move backup file to another location to safely change its properties
cp /srv/gitlab/conf/config_backup/*${Mdate}* /home/dailygitbackup/
# change ownership of the backup file to send
chown cvzadmin:cvzadmin /home/dailygitbackup/*${Mdate}*
echo "New temporary config backup file is ready : $(date +'%d.%m.%Y %H:%M:%S')" >> ${LogFile}


wall success




# notes:
# ---   config backup   ---
# command: gitlab-ctl backup-etc
# docker exec -t CvZgitlab /bin/sh -c 'gitlab-ctl backup-etc && cd /etc/gitlab/config_backup && cp $(ls -t | head -n1) /var/opt/gitlab/backups/'
# --- prune old backups ---
# change config in gitlab.rb file, this lets backup command to delete old files
# gitlab_rails['backup_keep_time'] = 604800 for 7 days (in seconds)
# below command deletes old config files, gitlab does this automatically
# gitlab-ctl backup-etc --delete-old-backups

